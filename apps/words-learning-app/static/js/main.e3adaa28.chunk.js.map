{"version":3,"sources":["DisplayWords.js","GuessWords.js","PostWords.js","Words.js","Header.js","App.js","index.js"],"names":["DisplayWords","props","react_default","a","createElement","data","word","GuessWords","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","correct","undefined","randomWord","prevWord","translation","tempWord","list","handleSubmit","bind","assertThisInitialized","handleChange","pickRandomIndex","pickWord","removeWord","clearTempWord","nextProps","_this2","setState","event","preventDefault","_this$state","alert","_event$target","target","name","value","defineProperty","Math","floor","random","length","_this3","r","prevState","_this4","filter","item","_this5","items","className","map","src_DisplayWords","key","_id","style","textDecoration","color","onSubmit","type","placeholder","onChange","Component","PostWords","language","handleSave","fetch","method","headers","Content-Type","body","JSON","stringify","then","res","json","catch","err","console","error","onClick","Words","wordsList","deleteReqResponse","downloadAllLists","useSelectedList","deleteSelectedList","findAndDeleteList","Accept","response","listName","log","header","concat","filteredList","newWord","newList","unshift","autoFocus","src_PostWords","src_GuessWords","Header","href","App","src_Header","src_Words","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.e3adaa28.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nfunction DisplayWords(props) {\r\n    return (\r\n        <li>{props.data.word}</li>    \r\n    )\r\n}\r\n\r\nexport default DisplayWords;","import React, {Component} from \"react\";\r\nimport DisplayWords from \"./DisplayWords\";\r\n\r\nclass GuessWords extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            correct: undefined,\r\n            randomWord: {},\r\n            prevWord: {\r\n                word: \"\",\r\n                translation: \"\"\r\n            },\r\n            tempWord: \"\",\r\n            list: [],\r\n        }\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.pickRandomIndex = this.pickRandomIndex.bind(this);\r\n        this.pickWord = this.pickWord.bind(this);\r\n        this.removeWord = this.removeWord.bind(this);\r\n        this.clearTempWord = this.clearTempWord.bind(this);\r\n    }\r\n\r\n    // componentDidMount() {\r\n    //     this.pickWord();\r\n    // }\r\n\r\n    componentWillReceiveProps(nextProps) {\r\n        this.setState({\r\n            list: nextProps.data\r\n        }, () => {\r\n            if (this.state.list[0]) {\r\n                this.pickWord()\r\n                return;\r\n            }\r\n            return;\r\n        })\r\n    }\r\n\r\n    handleSubmit(event) {\r\n        event.preventDefault();\r\n        const {tempWord, randomWord, list} = this.state;\r\n        if(randomWord === undefined) {\r\n            if(list[0]) {\r\n                this.pickWord()\r\n                return;\r\n            }\r\n            alert(\"Use another list to restart\")\r\n            return;\r\n        }\r\n        if(tempWord === randomWord.translation) {\r\n             this.setState({\r\n                correct: true,\r\n            });\r\n            this.removeWord();\r\n            this.clearTempWord();\r\n        } else {\r\n            this.setState({\r\n                correct: false,\r\n                \r\n            })\r\n            this.pickWord();\r\n            this.clearTempWord();\r\n        }\r\n    }\r\n\r\n    handleChange(event) {\r\n        const {name, value} = event.target;\r\n        this.setState({\r\n            [name]: value\r\n        })\r\n    }\r\n\r\n    clearTempWord() {\r\n        this.setState({\r\n            tempWord: \"\",\r\n        })\r\n    }\r\n\r\n    pickRandomIndex() {\r\n        let randomNum = Math.floor(Math.random()*this.state.list.length);\r\n        return randomNum;\r\n    }\r\n\r\n    pickWord() {\r\n        let r = this.pickRandomIndex();\r\n        this.setState(prevState => {\r\n           return {\r\n               randomWord: this.state.list[r],\r\n               prevWord: prevState.randomWord \r\n            }\r\n        })\r\n    }\r\n\r\n    removeWord() {\r\n        this.setState(prevState => {\r\n            let word = prevState.randomWord;\r\n            let arr = prevState.list;\r\n            return {\r\n                list: arr.filter(item => item.word !== word.word)\r\n            }\r\n        }, () => {\r\n            if(this.state.list[0] === undefined) {\r\n                return;\r\n            }\r\n            this.pickWord()\r\n        });\r\n    }\r\n\r\n    render() {\r\n        let items = this.state.list;\r\n        let wrong = () => {\r\n            if(!this.state.prevWord) {\r\n                return(\r\n                    <span style={{color: \"red\"}}></span>\r\n                )\r\n            }\r\n            return (<span style={{color: \"red\"}}>Wrong! {this.state.prevWord.word} - {this.state.prevWord.translation}</span>)\r\n        }\r\n        return (\r\n            <div className=\"guess-words-body\">\r\n                <ul>\r\n                    {items.map(item => <DisplayWords key={item._id} data={item}/>)}\r\n                </ul>\r\n                <br />\r\n                <div className=\"guess-words-title\">{\r\n                    this.state.randomWord !== undefined ? \r\n                    <h1>Guess this word: <span style={{textDecoration: \"italic\"}}>{this.state.randomWord.word}</span></h1> : \r\n                    <h1>Play again?</h1>\r\n                }\r\n                </div>\r\n                    <h1 className=\"answer-feedback\">\r\n                        {/* conditional rendering for answer feedback */}\r\n                        {\r\n                            this.state.correct ? \r\n                            <span style={{color: \"green\"}}>Correct!</span> : \r\n                            wrong()\r\n                        }\r\n                    </h1>\r\n                <div className=\"guess-words\">\r\n                    <form onSubmit={this.handleSubmit}>\r\n                        <input \r\n                            type=\"text\"\r\n                            name=\"tempWord\"\r\n                            placeholder=\"guess\"\r\n                            value={this.state.tempWord}\r\n                            onChange={this.handleChange}\r\n                        />\r\n                        <button>Guess</button>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default GuessWords;","import React, { Component } from \"react\";\r\n\r\nclass PostWords extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            name: \"\",\r\n            language: \"\",\r\n            list: props.data\r\n        }\r\n        this.handleSave = this.handleSave.bind(this);\r\n        this.handleChange = this.handleChange.bind(this);\r\n    }\r\n\r\n    componentWillReceiveProps(nextProps) {\r\n        this.setState({\r\n            list: nextProps.data\r\n        })\r\n    }\r\n\r\n    handleSave(event) {\r\n        event.preventDefault();\r\n        fetch('/words/add', {\r\n            method: 'post',\r\n            headers: {\r\n                \"Content-Type\": \"application/json\"\r\n            },\r\n            body: JSON.stringify(this.state),\r\n        })\r\n        .then(res => res.json())\r\n        .catch(err => console.error(err))\r\n    }\r\n\r\n    handleChange(event) {\r\n        const {name, value} = event.target;\r\n        this.setState({\r\n            [name]: value\r\n        })\r\n    }\r\n\r\n    render() { \r\n        return (\r\n            <div className=\"post-words-items\">\r\n            <div className=\"add-words-form-title\"><h2>Save words to Database</h2></div>\r\n                <div className=\"post-words-form\">\r\n                    <input \r\n                        type=\"text\" \r\n                        value={this.state.name} \r\n                        name=\"name\" \r\n                        onChange={this.handleChange}\r\n                        placeholder=\"Unique List Name\" \r\n                    />\r\n                    <input\r\n                        type=\"text\"\r\n                        value={this.state.language}\r\n                        name=\"language\"\r\n                        onChange={this.handleChange} \r\n                        placeholder=\"Language\"\r\n                    />\r\n                    <button type=\"submit\" onClick={this.handleSave}>Save Words</button>\r\n                </div>\r\n            </div>\r\n        )   \r\n    }\r\n}\r\n\r\nexport default PostWords;","import React, {Component} from \"react\";\r\nimport GuessWords from \"./GuessWords\";\r\nimport PostWords from \"./PostWords\";\r\n\r\nclass Words extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            word: \"\",\r\n            translation: \"\",\r\n            wordsList: [],\r\n            list: [],\r\n            deleteReqResponse: \"\"\r\n        }\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.downloadAllLists = this.downloadAllLists.bind(this);\r\n        this.useSelectedList = this.useSelectedList.bind(this);\r\n        this.deleteSelectedList = this.deleteSelectedList.bind(this);\r\n        this.findAndDeleteList = this.findAndDeleteList.bind(this);\r\n    }\r\n\r\n    downloadAllLists() {\r\n        fetch('/words/all', {\r\n            method: \"GET\",\r\n            headers: {\r\n                \"Accept\": \"application/json\",\r\n                \"Content-Type\": \"application/json\"\r\n            }\r\n        })\r\n        .then(response => response.json())\r\n        .then(data => this.setState({ wordsList: data }))\r\n        .catch(err => console.error(err));\r\n    }\r\n\r\n    useSelectedList(event) {\r\n        const listName = event.target.name;\r\n        console.log(listName);\r\n        fetch('/words/find?name=' + listName, {\r\n            method: \"GET\",\r\n            header: {\r\n                \"Accept\": \"application/json\",\r\n                \"Content-Type\": \"application/json\"\r\n            },\r\n        })\r\n        .then(response => response.json())\r\n        .then(data => this.setState({ list: data.list}))\r\n        .catch(err => console.error(err));\r\n    }\r\n\r\n    deleteSelectedList(event) {\r\n        const listName = event.target.name;\r\n        console.log(listName);\r\n        fetch('/words/delete?name=' + listName, {\r\n            method: 'DELETE',\r\n            header: {\r\n                \"Accept\": \"application/json\",\r\n                \"Content-Type\": \"application/json\"\r\n            }\r\n        })\r\n        .then(res => res.json())\r\n        .then(data => this.setState({ deleteReqResponse: data }, this.findAndDeleteList(listName)))\r\n        .then(console.log(this.state.deleteReqResponse))\r\n        .then(console.log(`The list called \"${listName}\" was deleted sucessfully!`))\r\n        .catch(err => console.error(err))\r\n    }\r\n\r\n    findAndDeleteList(name) {\r\n        const lists = this.state.wordsList;\r\n        const filteredList = lists.filter(list => list.name!==name);\r\n        this.setState({\r\n            wordsList: filteredList\r\n        })\r\n    }\r\n\r\n    handleSubmit(event) {\r\n        this.setState((prevState) => {\r\n            const newWord = {\r\n                word: prevState.word,\r\n                translation: prevState.translation\r\n            }\r\n            const newList = prevState.list;\r\n            newList.unshift(newWord);\r\n            return ({\r\n                word: \"\",\r\n                translation: \"\",\r\n                list: newList,\r\n            })\r\n        });\r\n        console.log(this.state.list)\r\n        event.preventDefault();\r\n    }\r\n\r\n    handleChange(event) {\r\n        const {name, value} = event.target;\r\n        this.setState({\r\n            [name]: value\r\n        })\r\n    }\r\n\r\n    render() {\r\n        let items = this.state.wordsList;\r\n        return (\r\n            <div className=\"words-item\">\r\n                <div className=\"add-words-form\">\r\n                    <div className=\"add-words-form-title\">\r\n                        <h2>Add word to list</h2>\r\n                    </div>\r\n                    <form onSubmit={this.handleSubmit}>\r\n                        <input \r\n                            autoFocus\r\n                            type=\"text\" \r\n                            name=\"word\"\r\n                            value={this.state.word} \r\n                            placeholder=\"Word\"\r\n                            onChange={this.handleChange}\r\n                        />\r\n                        <input \r\n                            type=\"text\"\r\n                            name=\"translation\" \r\n                            value={this.state.translation}\r\n                            placeholder=\"translation\"\r\n                            onChange={this.handleChange}\r\n                        />\r\n                        <button>Add</button>\r\n                    </form>\r\n                    <button onClick={this.downloadAllLists}>Display all saved lists</button>\r\n                    <ul>\r\n                        {\r\n                            items.map(item => \r\n                                <li key={item._id} className=\"lists-of-words\">\r\n                                    <span className=\"list-span\">List name: {item.name} - Language: {item.language}</span>\r\n                                    <button name={item.name} className=\"list-button\" onClick={this.useSelectedList}>Use</button>\r\n                                    <button name={item.name} className=\"list-button\" onClick={this.deleteSelectedList}>Delete</button>\r\n                                </li>\r\n                            )\r\n                        }\r\n                    </ul>\r\n                </div> \r\n                <PostWords data={this.state.list} />\r\n                <GuessWords data={this.state.list} />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Words;","import React from \"react\";\r\n\r\nfunction Header() {\r\n    return (\r\n        <div className=\"header\">\r\n            <h1>Words Learning App</h1>\r\n            <a href=\"/\"> Go Back to main page</a>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Header;","import React, {Component} from \"react\";\r\nimport Words from \"./Words\";\r\nimport \"./index.css\";\r\nimport Header from \"./Header\";\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"main-container\">\r\n        <Header />\r\n        <Words />\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default App;","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n"],"sourceRoot":""}
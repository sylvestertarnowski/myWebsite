{"version":3,"sources":["DisplayWords.js","GuessWords.js","populateState.js","PostWords.js","Words.js","Header.js","App.js","index.js"],"names":["DisplayWords","props","react_default","a","createElement","data","word","GuessWords","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","correct","randomWord","prevWord","translation","tempWord","list","handleSubmit","bind","assertThisInitialized","handleChange","pickRandomIndex","pickWord","removeWord","clearTempWord","nextProps","setState","event","preventDefault","_event$target","target","name","value","defineProperty","Math","floor","random","length","_this2","r","prevState","_this3","filter","item","items","className","map","src_DisplayWords","key","_id","undefined","style","textDecoration","onSubmit","type","placeholder","onChange","color","Component","populateState","PostWords","language","handleSave","console","log","fetch","method","body","JSON","stringify","then","res","json","catch","err","error","onClick","Words","updateStateWithData","callWordsDownload","concat","asyncToGenerator","regenerator_default","mark","_callee","response","wrap","_context","prev","next","headers","Accept","Content-Type","sent","status","Error","message","abrupt","stop","newWord","newList","unshift","autoFocus","src_PostWords","src_GuessWords","Header","href","App","callBackendAPI","express","src_Header","src_Words","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.d35703e4.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nfunction DisplayWords(props) {\r\n    return (\r\n        <li>{props.data.word}</li>    \r\n    )\r\n}\r\n\r\nexport default DisplayWords;","import React, {Component} from \"react\";\r\nimport DisplayWords from \"./DisplayWords\";\r\n\r\nclass GuessWords extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            correct: null,\r\n            randomWord: {},\r\n            prevWord: {\r\n                word: \"\",\r\n                translation: \"\"\r\n            },\r\n            tempWord: \"\",\r\n            list: props.data\r\n        }\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.pickRandomIndex = this.pickRandomIndex.bind(this);\r\n        this.pickWord = this.pickWord.bind(this);\r\n        this.removeWord = this.removeWord.bind(this);\r\n        this.clearTempWord = this.clearTempWord.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.pickWord();\r\n    }\r\n\r\n    componentWillReceiveProps(nextProps) {\r\n        this.setState({\r\n            list: nextProps.data\r\n        })\r\n    }\r\n\r\n    handleSubmit(event) {\r\n        let guess = this.state.tempWord;\r\n        let translation = this.state.randomWord.translation;\r\n        if(guess === translation) {\r\n             this.setState({\r\n                correct: true,\r\n            });\r\n            this.removeWord();\r\n            this.clearTempWord();\r\n        } else {\r\n            this.setState({\r\n                correct: false,\r\n                \r\n            })\r\n            this.pickWord();\r\n            this.clearTempWord();\r\n        }\r\n        event.preventDefault();\r\n    }\r\n\r\n    handleChange(event) {\r\n        const {name, value} = event.target;\r\n        this.setState({\r\n            [name]: value\r\n        })\r\n    }\r\n\r\n    clearTempWord() {\r\n        this.setState({\r\n            tempWord: \"\",\r\n        })\r\n    }\r\n\r\n    pickRandomIndex() {\r\n        let randomNum = Math.floor(Math.random()*this.state.list.length);\r\n        return randomNum;\r\n    }\r\n\r\n    pickWord() {\r\n        let r = this.pickRandomIndex();\r\n        this.setState(prevState => {\r\n           return {\r\n               randomWord: this.state.list[r],\r\n               prevWord: prevState.randomWord \r\n            }\r\n        })\r\n    }\r\n\r\n    removeWord() {\r\n        this.setState(prevState => {\r\n            let word = prevState.randomWord;\r\n            let arr = prevState.list;\r\n            return {\r\n                list: arr.filter(item => item.word !== word.word)\r\n            }\r\n        }, () => this.pickWord());\r\n    }\r\n\r\n    render() {\r\n        let items = this.state.list;\r\n        return (\r\n            <div className=\"guess-words-body\">\r\n                <ul>\r\n                    {items.map(item => <DisplayWords key={item._id} data={item}/>)}\r\n                </ul>\r\n                <br />\r\n                <div className=\"guess-words-title\">{\r\n                    this.state.randomWord !== undefined ? \r\n                    <h1>Guess this word: <span style={{textDecoration: \"italic\"}}>{this.state.randomWord.word}</span></h1> : \r\n                    <h1>Play again?</h1>\r\n                }\r\n                </div>\r\n                <div>\r\n                <form onSubmit={this.handleSubmit}>\r\n                    <input \r\n                        type=\"text\"\r\n                        name=\"tempWord\"\r\n                        placeholder=\"guess\"\r\n                        value={this.state.tempWord}\r\n                        onChange={this.handleChange}\r\n                    />\r\n                    <button>Guess</button>\r\n                </form>\r\n                </div>\r\n                <h1>\r\n                {/* conditional rendering for answer feedback */}\r\n                {\r\n                    this.state.correct ? \r\n                    <span style={{color: \"green\"}}>Correct!</span> : \r\n                    <span style={{color: \"red\"}}>Wrong! {this.state.prevWord.word} - {this.state.prevWord.translation}</span>\r\n                }\r\n                </h1>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default GuessWords;","export default [\r\n    {\r\n        _id: \"1\",\r\n        word: \"marchewka\",\r\n        translation: \"carrot\"\r\n    },\r\n    {\r\n        _id: \"2\",\r\n        word: \"kubek\",\r\n        translation: \"cup\"\r\n    },\r\n    {\r\n        _id: \"3\",\r\n        word: \"kawa\",\r\n        translation: \"coffee\"\r\n    },\r\n    {\r\n        _id: \"4\",\r\n        word: \"ciasto\",\r\n        translation: \"cake\"\r\n    },\r\n    {\r\n        _id: \"5\",\r\n        word: \"talerz\",\r\n        translation: \"plate\"\r\n    },\r\n    {\r\n        _id: \"6\",\r\n        word: \"pomarańcza\",\r\n        translation: \"orange\"\r\n    },\r\n    {\r\n        _id: \"7\",\r\n        word: \"smartfon\",\r\n        translation: \"smartphone\"\r\n    },\r\n    {\r\n        _id: \"8\",\r\n        word: \"woda\",\r\n        translation: \"water\"\r\n    },\r\n    {\r\n        _id: \"9\",\r\n        word: \"ściana\",\r\n        translation: \"wall\"\r\n    },\r\n    {\r\n        _id: \"10\",\r\n        word: \"skóra\",\r\n        translation: \"skin\"\r\n    },\r\n    {\r\n        _id: \"11\",\r\n        word: \"ciastko\",\r\n        translation: \"biscuit\"\r\n    },\r\n]","import React, { Component } from \"react\";\r\n\r\nclass PostWords extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            name: \"\",\r\n            language: \"\",\r\n            list: props.data\r\n        }\r\n        this.handleSave = this.handleSave.bind(this);\r\n        this.handleChange = this.handleChange.bind(this);\r\n    }\r\n\r\n    componentWillReceiveProps(nextProps) {\r\n        this.setState({\r\n            list: nextProps.data\r\n        })\r\n    }\r\n\r\n    handleSave(event) {\r\n        event.preventDefault();\r\n        console.log(this.state);\r\n        fetch('/words/add', {\r\n            method: 'post',\r\n            body: JSON.stringify(this.state),\r\n        })\r\n        .then(res => res.json())\r\n        .then(data => console.log(data))\r\n        .catch(err => console.error(err))\r\n    }\r\n\r\n    handleChange(event) {\r\n        const {name, value} = event.target;\r\n        this.setState({\r\n            [name]: value\r\n        })\r\n    }\r\n\r\n    render() { \r\n        return (\r\n            <div className=\"post-words-items\">\r\n            <div className=\"add-words-form-title\"><h2>Save words to Database</h2></div>\r\n                <div className=\"post-words-form\">\r\n                    <input \r\n                        type=\"text\" \r\n                        value={this.state.name} \r\n                        name=\"name\" \r\n                        onChange={this.handleChange}\r\n                        placeholder=\"Unique List Name\" \r\n                    />\r\n                    <input\r\n                        type=\"text\"\r\n                        value={this.state.language}\r\n                        name=\"language\"\r\n                        onChange={this.handleChange} \r\n                        placeholder=\"Language\"\r\n                    />\r\n                    <button type=\"submit\" onClick={this.handleSave}>Save Words</button>\r\n                </div>\r\n            </div>\r\n        )   \r\n    }\r\n}\r\n\r\nexport default PostWords;","import React, {Component} from \"react\";\r\nimport GuessWords from \"./GuessWords\";\r\nimport populateState from \"./populateState\";\r\nimport PostWords from \"./PostWords\";\r\n\r\nclass Words extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            word: \"\",\r\n            translation: \"\",\r\n            list: populateState\r\n        }\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n        this.handleChange = this.handleChange.bind(this);\r\n    }\r\n\r\n    updateStateWithData = () => {\r\n        this.callWordsDownload()\r\n            .then(res => this.setState(prevState => {\r\n                let newList = res.list.concat(prevState.list);\r\n                return { \r\n                    word: \"\",\r\n                    translation: \"\",\r\n                    list: newList \r\n                }\r\n            }, () => console.log(this.state.list)))\r\n\r\n            .catch(err => console.log(err));\r\n    }\r\n\r\n    callWordsDownload = async () => {\r\n        const response = await fetch('/words/default', {\r\n            method: \"GET\",\r\n            headers: {\r\n                \"Accept\": \"application/json\",\r\n                \"Content-Type\": \"application/json\"\r\n            }\r\n        });\r\n        const body = await response.json();\r\n\r\n        if (response.status !== 200) {\r\n            throw Error(body.message)\r\n        }\r\n        return body;\r\n    }\r\n\r\n    handleSubmit(event) {\r\n        this.setState((prevState) => {\r\n            const newWord = {\r\n                word: prevState.word,\r\n                translation: prevState.translation\r\n            }\r\n            const newList = prevState.list;\r\n            newList.unshift(newWord);\r\n            return ({\r\n                word: \"\",\r\n                translation: \"\",\r\n                list: newList,\r\n            })\r\n        });\r\n        console.log(this.state.list)\r\n        event.preventDefault();\r\n    }\r\n\r\n    handleChange(event) {\r\n        const {name, value} = event.target;\r\n        this.setState({\r\n            [name]: value\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"words-item\">\r\n                <div className=\"add-words-form\">\r\n                    <div className=\"add-words-form-title\">\r\n                        <h2>Add word to list</h2>\r\n                    </div>\r\n                    <form onSubmit={this.handleSubmit}>\r\n                        <input \r\n                            autoFocus\r\n                            type=\"text\" \r\n                            name=\"word\"\r\n                            value={this.state.word} \r\n                            placeholder=\"Word\"\r\n                            onChange={this.handleChange}\r\n                        />\r\n                        <input \r\n                            type=\"text\"\r\n                            name=\"translation\" \r\n                            value={this.state.translation}\r\n                            placeholder=\"translation\"\r\n                            onChange={this.handleChange}\r\n                        />\r\n                        <button>Add</button>\r\n                    </form>\r\n                    <button onClick={this.updateStateWithData}>Download List from Server</button>\r\n                </div> \r\n                <PostWords data={this.state.list} />\r\n                <GuessWords data={this.state.list} />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Words;","import React from \"react\";\r\n\r\nfunction Header() {\r\n    return (\r\n        <div className=\"header\">\r\n            <h1>Words Learning App</h1>\r\n            <a href=\"/\"> Go Back to main page</a>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Header;","import React, {Component} from \"react\";\r\nimport Words from \"./Words\";\r\nimport \"./index.css\";\r\nimport Header from \"./Header\";\r\n\r\nclass App extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      data: null\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.callBackendAPI()\r\n      .then(res => this.setState({ data: res.express }))\r\n      .catch(err => console.log(err));\r\n  }\r\n\r\n  callBackendAPI = async () => {\r\n    const response = await fetch('/express_backend');\r\n    const body = await response.json();\r\n\r\n    if (response.status !== 200) {\r\n      throw Error(body.message)\r\n    }\r\n    return body;\r\n  };\r\n  \r\n  render() {\r\n    return (\r\n      <div className=\"main-container\">\r\n        <Header />\r\n        <Words />\r\n        {console.log(this.state.data)}\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default App;","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n"],"sourceRoot":""}
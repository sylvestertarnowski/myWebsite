{"version":3,"sources":["App.js","Display.js","Memory.js","serviceWorker.js","index.js"],"names":["App","_this","Object","D_Projects_calculator_app_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__","this","D_Projects_calculator_app_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__","D_Projects_calculator_app_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__","call","state","memory","display","numbers","operations","handleClick","bind","D_Projects_calculator_app_node_modules_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_5__","handleClear","handleClearAll","handleBackspace","handleOperation","handleEquals","handleKey","event","name","target","setState","prevState","str","substring","length","_this$state","checkIfArrayEndsOnOperator","arr","updatedMemory","push","lastChar","_this2","finalArray","pop","finalEquasion","join","result","eval","document","addEventListener","preventDefault","_this$state2","console","log","key","includes","_this3","nums","react__WEBPACK_IMPORTED_MODULE_6___default","a","createElement","className","tabIndex","_Memory__WEBPACK_IMPORTED_MODULE_11__","data","_Display__WEBPACK_IMPORTED_MODULE_10__","onClick","map","num","toString","id","Component","react__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","react__WEBPACK_IMPORTED_MODULE_0___default","n","Display","props","Memory","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","error","ReactDOM","render","react_default","getElementById","URL","process","href","origin","concat","fetch","response","contentType","headers","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.daa2012a.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport \"./css/App.css\";\nimport \"./css/Operations.css\";\nimport \"./css/Numbers.css\";\nimport Display from \"./Display\";\nimport Memory from \"./Memory\";\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      memory: [],\n      display: \"\",\n      numbers: [\"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \".\", \"0\"],\n      operations: [\"*\", \"-\", \"+\", \"/\"]\n    }\n\n    this.handleClick = this.handleClick.bind(this); //clicking on any number or dot\n    this.handleClear = this.handleClear.bind(this);\n    this.handleClearAll = this.handleClearAll.bind(this);\n    this.handleBackspace = this.handleBackspace.bind(this);\n    this.handleOperation = this.handleOperation.bind(this);\n    this.handleEquals = this.handleEquals.bind(this);\n    this.handleKey = this.handleKey.bind(this);\n  }\n\n  handleClick(event) {\n    const { name } = event.target;\n    this.setState(prevState => {\n      return { display: prevState.display + name, }\n    })\n  }\n\n  handleClear() {\n    this.setState({\n      display: \"\",\n    })\n  }\n\n  handleClearAll() {\n    this.setState({\n      memory: [],\n      display: \"\",\n    })\n  }\n\n  handleBackspace() {\n    this.setState(prevState => {\n      const str = prevState.display;\n      const result = str.substring(0, str.length - 1);\n      return {\n        display: result,\n      }\n    })\n  }\n\n  handleOperation(event) {\n    let { name } = event.target;\n    let { memory, display } = this.state;\n    if (display === \"\" && this.checkIfArrayEndsOnOperator(memory)) {\n      this.setState(prevState => {\n        let arr = prevState.memory;\n        arr[arr.length - 1] = name;\n        return {\n          memory: arr,\n        }\n      })\n      return;\n    }\n    this.setState(prevState => {\n      let updatedMemory = prevState.memory;\n      updatedMemory.push(prevState.display, name);\n      return {\n        memory: updatedMemory,\n        display: \"\",\n      }\n    })\n  }\n\n  checkIfArrayEndsOnOperator(arr) {\n    const lastChar = arr[arr.length - 1];\n    if (\n      lastChar === \"+\" ||\n      lastChar === \"-\" ||\n      lastChar === \"/\" ||\n      lastChar === \"*\"\n    ) {\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  handleEquals() {\n    this.setState(prevState => {\n      const { memory, display } = prevState;\n      let finalArray = memory;\n      if (display.length > 0) {\n        finalArray.push(display);\n      }\n      if (this.checkIfArrayEndsOnOperator(finalArray)) {\n        finalArray.pop();\n      }\n      let finalEquasion = finalArray.join(\" \");\n      // eslint-disable-next-line\n      let result = eval(finalEquasion);\n      return {\n        memory: [],\n        display: result,\n      }\n    })\n  }\n\n  componentDidMount() {\n    document.addEventListener('keyup', this.handleKey);\n  }\n\n  handleKey(event) {\n    event.preventDefault();\n    const { numbers, operations } = this.state;\n    console.log(event.key);\n    let key = {\n      target: {\n        name: event.key,\n      }\n    };\n    if ( numbers.includes(event.key) ) {\n      this.handleClick(key);\n    }\n    if ( operations.includes(event.key) ) {\n      this.handleOperation(key);\n    }\n    if ( event.key === \"Backspace\" ) {\n      this.handleBackspace();\n    }\n    if ( event.key === \"=\" || event.key === \"Enter\" ) {\n      this.handleEquals();\n    }\n    if ( event.key === \"Delete\" ) {\n      this.handleClear();\n    }\n  }\n\n  render() {\n    let nums = this.state.numbers\n    return (\n\n      <div className=\"calculator\" tabIndex=\"-1\">\n        <Memory data={this.state.memory} />\n        <Display data={this.state.display} />\n        <div className=\"buttons-container\">\n          <div className=\"column\">\n            <div className=\"clear-container\">\n              <button\n                className=\"clear\"\n                onClick={this.handleClear}\n              >\n                C\n              </button>\n              <button\n                className=\"clear\"\n                onClick={this.handleClearAll}\n              >\n                CA\n              </button>\n            </div>\n            <div className=\"numpad-container\">\n              {\n                nums.map(num =>\n                  <button\n                    name={num.toString()}\n                    key={num}\n                    className=\"number\"\n                    id={num.toString()}\n                    onClick={this.handleClick}\n                    tabIndex=\"0\"\n                  >\n                    {num.toString()}\n                  </button>)\n              }\n              <button\n                id=\"equals\"\n                name=\"equals\"\n                onClick={this.handleEquals}\n              >\n                =\n                </button>\n            </div>\n          </div>\n          <div className=\"column\">\n            {/* Operations here*/}\n            <div className=\"operations-container\">\n              <button\n                name=\"backspace\"\n                onClick={this.handleBackspace}\n              >\n                {\"<--\"}\n              </button>\n\n              <button\n                name=\"+\"\n                onClick={this.handleOperation}\n              >\n                +\n                </button>\n\n              <button\n                name=\"-\"\n                onClick={this.handleOperation}\n              >\n                -\n                </button>\n\n              <button\n                name=\"/\"\n                onClick={this.handleOperation}\n              >\n                /\n                </button>\n\n              <button\n                name=\"*\"\n                onClick={this.handleOperation}\n              >\n                *\n                </button>\n            </div>\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default App;\n","import React from \"react\";\r\nimport \"./css/Display.css\";\r\n\r\nfunction Display(props) {\r\n    return (\r\n        <div className=\"display\">{props.data}</div>\r\n    )\r\n}\r\n\r\nexport default Display;","import React from \"react\";\r\nimport \"./css/Memory.css\";\r\n\r\nfunction Memory(props) {\r\n    return (\r\n        <div className=\"memory\">\r\n            {props.data.join(\" \")}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Memory;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\nserviceWorker.register();\n"],"sourceRoot":""}
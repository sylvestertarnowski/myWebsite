{"version":3,"sources":["components/Header.tsx","components/layout/Section.tsx","components/layout/Label.tsx","components/inputs/InputText.tsx","components/inputs/InputTextArea.tsx","data/categories.js","components/inputs/DropdownCategory.tsx","components/inputs/RadioPayment.tsx","components/layout/Tooltip.tsx","components/About.tsx","data/employees.js","components/inputs/DropdownResponsible.tsx","components/Coordinator.tsx","components/When.tsx","components/inputs/ButtonSubmit.tsx","components/Success.tsx","data/getValidatedForm.ts","components/Main.tsx","App.tsx","index.tsx"],"names":["Header","react_default","a","createElement","className","Section","_ref","title","children","Label","props","text","mandatory","name","htmlFor","id","InputText","_useState","useState","_useState2","Object","slicedToArray","value","setValue","required","placeholder","type","currentDate","today","Date","dd","String","getDate","padStart","mm","getMonth","yyyy","getFullYear","concat","getCurrentDate","min","onChange","e","target","InputTextArea","maxLength","length","categories","DropdownCategory","options","data","map","category","key","disabled","RadioPayment","defaultChecked","inputs_InputText","Tooltip","message","About","layout_Section","layout_Label","layout_Tooltip","inputs_InputTextArea","inputs_DropdownCategory","inputs_RadioPayment","employees","lastname","email","DropdownResponsible","loggedUserId","loggedUserOptions","employee","Coordinator","inputs_DropdownResponsible","When","ButtonSubmit","Success","getValidatedForm","obj","finalData","_i","_keys","keys","Main","state","formSubmitted","description","date","coordinator","getLoggedUser","_this","setState","getInvalidFeedback","document","querySelectorAll","forEach","input","label","querySelector","tooltip","addEventListener","classList","add","validity","valid","remove","isEventPaid","val","handleSubmit","preventDefault","_e$target","paid_event","event_fee","reward","time","duration","parsedFormData","category_id","parseInt","undefined","toString","objectSpread","console","log","JSON","stringify","this","components_Success","onSubmit","components_About","components_Coordinator","components_When","inputs_ButtonSubmit","React","Component","App","components_Header","components_Main","ReactDOM","render","src_App_0","getElementById"],"mappings":"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","file":"static/js/main.38874067.chunk.js","sourcesContent":["import React from 'react';\r\nimport '../css/Header.css';\r\n\r\nconst Header: React.FC = () => {\r\n    return (\r\n        <div className=\"width-wrapper\">\r\n            <div className=\"header\">\r\n                New event\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Header;","import React from 'react';\r\nimport '../../css/Section.css';\r\n\r\ntype SectionProps = {\r\n    title: string;\r\n}\r\n\r\nconst Section: React.FC<SectionProps> = ({ title, children }) => {\r\n    return (\r\n        <div className=\"section\">\r\n            <div className=\"section-title\">{title}</div>\r\n            <div className=\"section-items\">{children}</div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Section;","import React from 'react';\r\nimport '../../css/Label.css';\r\n\r\ntype P = {\r\n    text: string;\r\n    mandatory: boolean;\r\n    name: string;\r\n}\r\n\r\nconst Label: React.FC<P> = (props) => {\r\n    const { text, mandatory, name } = props;\r\n\r\n    if (mandatory) {\r\n        return (\r\n            <label className=\"input-label\" htmlFor={name}>\r\n                {text} <span id=\"red\">*</span>\r\n            </label>\r\n        )\r\n    }\r\n    return (\r\n        <label className=\"input-label\" htmlFor={name}>\r\n            {text}\r\n        </label>\r\n    )\r\n}\r\n\r\nexport default Label;","import React, { useState } from 'react';\r\nimport '../../css/InputText.css';\r\n\r\ntype P = {\r\n    name: string;\r\n    required: boolean;\r\n    placeholder: string;\r\n    type: string;\r\n    text?: string;\r\n}\r\n\r\nconst InputText: React.FC<P> = (props) => {\r\n    const [value, setValue] = useState(\"\");\r\n\r\n    const getCurrentDate = ():string => {\r\n        let today: Date | string = new Date();\r\n        let dd = String(today.getDate()).padStart(2, '0');\r\n        let mm = String(today.getMonth() + 1).padStart(2, '0');\r\n        let yyyy = today.getFullYear();\r\n        \r\n        let currentDate = `${yyyy}-${mm}-${dd}`;\r\n        return currentDate;\r\n    }\r\n\r\n    const { name, required, placeholder, type, text } = props;\r\n    if (required) {\r\n        if (type === \"date\") {\r\n            let currentDate = getCurrentDate();\r\n            return (\r\n                <div className=\"input-wrapper\">\r\n                    <div className=\"input-wrapper-row\">\r\n                        <input\r\n                            name={name}\r\n                            id={name}\r\n                            required\r\n                            min={currentDate}\r\n                            placeholder={placeholder}\r\n                            type={type}\r\n                            value={value}\r\n                            onChange={e => setValue(e.target.value)}\r\n                        />\r\n                        {text && <span className=\"input-side-text\">{text}</span>}\r\n                    </div>\r\n                </div>\r\n            )\r\n        } else {\r\n            return (\r\n                <div className=\"input-wrapper\">\r\n                    <div className=\"input-wrapper-row\">\r\n                        <input\r\n                            name={name}\r\n                            id={name}\r\n                            required\r\n                            placeholder={placeholder}\r\n                            type={type}\r\n                            value={value}\r\n                            onChange={e => setValue(e.target.value)}\r\n                        />\r\n                        {text && <span className=\"input-side-text\">{text}</span>}\r\n                    </div>\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n    return (\r\n        <div className=\"input-wrapper\">\r\n            <div className=\"input-wrapper-row\">\r\n                <input\r\n                    name={name}\r\n                    id={name}\r\n                    placeholder={placeholder}\r\n                    type={type}\r\n                    value={value}\r\n                    onChange={e => setValue(e.target.value)}\r\n                />\r\n                {text && <span className=\"input-side-text\">{text}</span>}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default InputText;","import React, { useState } from 'react';\r\n\r\ntype P = {\r\n    name: string;\r\n    placeholder: string;\r\n    maxLength: number;\r\n}\r\n\r\nconst InputTextArea: React.FC<P> = (props) => {\r\n    const [value , setValue] = useState(\"\");\r\n\r\n    const { name, placeholder, maxLength } = props;\r\n\r\n    return (\r\n        <div className=\"input-wrapper\">\r\n            <textarea\r\n                name={name}\r\n                id={name}\r\n                required\r\n                placeholder={placeholder}\r\n                value={value}\r\n                maxLength={maxLength}\r\n                onChange={e => setValue(e.target.value)}\r\n            />\r\n            <div className=\"description-text\">\r\n                <span>Max length {maxLength} characters </span>\r\n                <span id=\"desc-right\">{value.length}/{maxLength}</span>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default InputTextArea;","\nexport default [\n  {\n    \"id\": 0,\n    \"name\": \"Cycling\"\n  },\n  {\n    \"id\": 1,\n    \"name\": \"Hiking\"\n  },\n  {\n    \"id\": 2,\n    \"name\": \"Cooking\"\n  },\n  {\n    \"id\": 3,\n    \"name\": \"Rock climbing\"\n  },\n  {\n    \"id\": 4,\n    \"name\": \"Yoga\"\n  },\n  {\n    \"id\": 5,\n    \"name\": \"Fencing\"\n  },\n  {\n    \"id\": 6,\n    \"name\": \"Swimming\"\n  },\n  {\n    \"id\": 7,\n    \"name\": \"Badminton\"\n  },\n  {\n    \"id\": 8,\n    \"name\": \"Running\"\n  },\n  {\n    \"id\": 9,\n    \"name\": \"Dance\"\n  }\n]\n","import React, { useState } from 'react';\r\nimport data from '../../data/categories.js';\r\n\r\ntype P = {\r\n    name: string;\r\n    placeholder: string;\r\n    text: string;\r\n}\r\n\r\nconst DropdownCategory: React.FC<P> = (props) => {\r\n    const [value, setValue] = useState(\"initial\");\r\n\r\n    const { name, placeholder, text } = props;\r\n    \r\n    const options = data.map(category => {\r\n        const { id, name } = category;\r\n        return <option key={id} value={id}>{name}</option>\r\n    })\r\n\r\n    return (\r\n        <div>\r\n            <div>\r\n            <select\r\n                className={value === \"initial\" ? value : value}\r\n                name={name}\r\n                id={name}\r\n                value={value}\r\n                onChange={e => setValue(e.target.value)}\r\n            >\r\n            <option id=\"initial\" value=\"initial\" disabled>{placeholder}</option>\r\n            {options}\r\n            </select>\r\n            </div>\r\n            <div className=\"description-text\">{text}</div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DropdownCategory;","import React, { useState } from 'react';\r\nimport InputText from './InputText';\r\nimport '../../css/RadioPayment.css';\r\n\r\nconst RadioPayment: React.FC = () => {\r\n    const [value, setValue] = useState(\"free\"); \r\n\r\n    return (\r\n        <div id=\"payment\">\r\n            <input\r\n                type=\"radio\"\r\n                id=\"free\"\r\n                name=\"paid_event\"\r\n                value=\"false\"\r\n                defaultChecked\r\n                onChange={e => setValue(e.target.id)}\r\n            />\r\n            <label htmlFor=\"free\" className=\"payment-label\">Free event </label>\r\n            <input\r\n                type=\"radio\"\r\n                id=\"paid\"\r\n                name=\"paid_event\"\r\n                value=\"true\"\r\n                onChange={e => setValue(e.target.id)}\r\n            />\r\n            <label htmlFor=\"paid\" className=\"payment-label\">Paid event </label>\r\n            {\r\n                // If paid event, display a required event_fee input\r\n                value === \"paid\" &&\r\n                <InputText \r\n                    name=\"event_fee\"\r\n                    required={true}\r\n                    placeholder=\"Fee\"\r\n                    type=\"number\"\r\n                    text=\"$\"\r\n                />\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default RadioPayment;","import React from 'react';\r\nimport '../../css/Tooltip.css';\r\n\r\ntype P = {\r\n    title?: string;\r\n    message?: string;\r\n}\r\n\r\nconst Tooltip: React.FC<P> = (props) => {\r\n    const { title, message } = props;\r\n\r\n    return (\r\n        <div className=\"tooltip\">\r\n            <div title={title} className=\"hidden\">\r\n                <div className=\"arrow-left\"></div>\r\n                <div className=\"tooltip-body\">\r\n                    {message}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Tooltip;","import React from 'react';\r\nimport Section from './layout/Section';\r\nimport Label from './layout/Label';\r\nimport InputText from './inputs/InputText';\r\nimport InputTextArea from './inputs/InputTextArea';\r\nimport DropdownCategory from './inputs/DropdownCategory';\r\nimport RadioPayment from './inputs/RadioPayment';\r\nimport Tooltip from './layout/Tooltip';\r\n\r\nconst About: React.FC = () => {\r\n    return (\r\n        <Section title=\"About\">\r\n            <Label text=\"title\" mandatory={true} name=\"title\" />\r\n            <InputText\r\n                name=\"title\"\r\n                required={true}\r\n                placeholder=\"Make it short and clear\"\r\n                type=\"text\"\r\n            />\r\n            <Tooltip title=\"title\" message=\"Title cannot be empty\" />\r\n\r\n            <Label text=\"description\" mandatory={true} name=\"description\" />\r\n            <InputTextArea\r\n                name=\"description\"\r\n                placeholder=\"Write about your event, be creative\"\r\n                maxLength={140}\r\n            />\r\n            <Tooltip title=\"description\" message=\"Description cannot be empty\"/>\r\n\r\n            <Label text=\"category\" mandatory={false} name=\"category\" />\r\n            <DropdownCategory\r\n                name=\"category\"\r\n                placeholder=\"Select category (skills, interests, locations)\"\r\n                text=\"Describes topic and people who should be interested in this event\"\r\n            />\r\n            <Tooltip />\r\n\r\n            <Label text=\"payment\" mandatory={false} name=\"payment\" />\r\n            <RadioPayment />\r\n            <Tooltip title=\"event_fee\" message=\"Fee cannot be empty\"/>\r\n\r\n            <Label text=\"reward\" mandatory={false} name=\"reward\" />\r\n            <InputText\r\n                name=\"reward\"\r\n                required={false}\r\n                placeholder=\"Number\"\r\n                type=\"number\"\r\n                text=\"reward points for attendance\"\r\n            />\r\n            <Tooltip />\r\n        </Section>\r\n    )\r\n}\r\n\r\nexport default About;","\nexport default [\n  {\n    \"id\": 0,\n    \"name\": \"Daniel\",\n    \"lastname\": \"Mitchell\",\n    \"email\": \"daniel.mitchell@hussa.rs\"\n  },\n  {\n    \"id\": 1,\n    \"name\": \"Albert\",\n    \"lastname\": \"Alexander\",\n    \"email\": \"albert.alexander@hussa.rs\"\n  },\n  {\n    \"id\": 2,\n    \"name\": \"Philip\",\n    \"lastname\": \"Hughes\",\n    \"email\": \"philip.hughes@hussa.rs\"\n  },\n  {\n    \"id\": 3,\n    \"name\": \"Walter\",\n    \"lastname\": \"Nelson\",\n    \"email\": \"walter.nelson@hussa.rs\"\n  },\n  {\n    \"id\": 4,\n    \"name\": \"Ashley\",\n    \"lastname\": \"Hernandez\",\n    \"email\": \"ashley.hernandez@hussa.rs\"\n  },\n  {\n    \"id\": 5,\n    \"name\": \"Donna\",\n    \"lastname\": \"Washington\",\n    \"email\": \"donna.washington@hussa.rs\"\n  },\n  {\n    \"id\": 6,\n    \"name\": \"Andrew\",\n    \"lastname\": \"White\",\n    \"email\": \"andrew.white@hussa.rs\"\n  },\n  {\n    \"id\": 7,\n    \"name\": \"Sharon\",\n    \"lastname\": \"Allen\",\n    \"email\": \"sharon.allen@hussa.rs\"\n  },\n  {\n    \"id\": 8,\n    \"name\": \"Russell\",\n    \"lastname\": \"Parker\",\n    \"email\": \"russell.parker@hussa.rs\"\n  },\n  {\n    \"id\": 9,\n    \"name\": \"Janet\",\n    \"lastname\": \"Stewart\",\n    \"email\": \"janet.stewart@hussa.rs\"\n  }\n]\n","import React, { useState } from 'react';\r\nimport data from '../../data/employees.js';\r\n\r\ntype P = {\r\n    name: string;\r\n    loggedUserId: number | null;\r\n}\r\n\r\nconst DropdownResponsible: React.FC<P> = (props) => {\r\n    const [value, setValue] = useState(\"\");\r\n\r\n    const { loggedUserId } = props;\r\n\r\n    let loggedUserOptions: any[] = [];\r\n    \r\n    const options = data.map(employee => {\r\n        const { id, name, lastname } = employee;\r\n        if(id === loggedUserId) {\r\n            loggedUserOptions[0] = <option key=\"me\" disabled>Me</option>;\r\n            loggedUserOptions[1] = <option key={loggedUserId} value={loggedUserId}>{name} {lastname}</option>;\r\n            loggedUserOptions[2] = <option key=\"others\" disabled>Others</option>;\r\n            return null;\r\n        } else {\r\n            return <option key={id} value={id}>{name} {lastname}</option>\r\n        }\r\n    });\r\n\r\n    return (\r\n        <select\r\n            name={props.name}\r\n            id={props.name}\r\n            required\r\n            value={value}\r\n            onChange={e => setValue(e.target.value)}\r\n        >\r\n        {\r\n            loggedUserId && \r\n            loggedUserOptions\r\n        }\r\n        {options}\r\n        </select>\r\n    )\r\n}\r\n\r\nexport default DropdownResponsible;","import React from 'react';\r\nimport Section from './layout/Section';\r\nimport Label from './layout/Label';\r\nimport DropdownResponsible from './inputs/DropdownResponsible';\r\nimport InputText from './inputs/InputText';\r\nimport Tooltip from './layout/Tooltip';\r\n\r\ntype P = {\r\n    loggedUserId: number | null;\r\n}\r\n\r\nconst Coordinator: React.FC<P> = ({ loggedUserId }) => {\r\n    return (\r\n        <Section title=\"Coordinator\">\r\n            <Label text=\"responsible\" mandatory={true} name=\"coordinator\" />\r\n            <DropdownResponsible\r\n                name=\"coordinator\"\r\n                loggedUserId={loggedUserId}\r\n            />\r\n            <Tooltip />\r\n\r\n            <Label text=\"email\" mandatory={false} name=\"email\" />\r\n            <InputText\r\n                name=\"email\"\r\n                required={false}\r\n                placeholder=\"Email\"\r\n                type=\"email\"\r\n            />\r\n            <Tooltip title=\"email\" message=\"Email format invalid\" />\r\n        </Section>\r\n    )\r\n}\r\n\r\nexport default Coordinator;","import React from 'react';\r\nimport Section from './layout/Section';\r\nimport Label from './layout/Label';\r\nimport InputText from './inputs/InputText';\r\nimport Tooltip from './layout/Tooltip';\r\n\r\nconst When: React.FC = () => {\r\n    return (\r\n        <Section title=\"When\">\r\n            <Label text=\"starts on\" mandatory={true} name=\"date\" />\r\n            <div className=\"input-wrapper-row\">\r\n                <InputText\r\n                    name=\"date\"\r\n                    required={true}\r\n                    placeholder=\"dd/mm/yyyy\"\r\n                    type=\"date\"\r\n                    text=\"at\"\r\n                />\r\n                <InputText\r\n                    name=\"time\"\r\n                    required={true}\r\n                    placeholder=\"--:--\"\r\n                    type=\"time\"\r\n                />\r\n            </div>\r\n            <Tooltip title=\"time\" message=\"Date and time are required\"/>\r\n\r\n            <Label text=\"duration\" mandatory={false} name=\"duration\" />\r\n            <InputText\r\n                name=\"duration\"\r\n                required={false}\r\n                placeholder=\"Number\"\r\n                type=\"number\"\r\n                text=\"hour\"\r\n            />\r\n            <Tooltip />\r\n        </Section>\r\n    )\r\n}\r\n\r\nexport default When;","import React from 'react';\r\nimport '../../css/ButtonSubmit.css';\r\n\r\ntype P = {\r\n    text: string;\r\n}\r\n\r\nconst ButtonSubmit: React.FC<P> = (props) => {\r\n    const { text } = props;\r\n\r\n    return (\r\n        <div className=\"button-submit-wrapper\">\r\n            <button className=\"button-submit\">{text}</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ButtonSubmit;","import React from 'react';\r\nimport '../css/Success.css';\r\n\r\nconst Success: React.FC = () => {\r\n    return (\r\n        <div className=\"success-wrapper\">\r\n            <div className=\"main-width-wrapper\">\r\n                <div className=\"success\">\r\n                    <div className=\"success-title\">Success</div>\r\n                    <div className=\"success-message\">Event has been created.</div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Success;","/* \r\n    There is probably slightly more performant version to do this.\r\n    This function ensures that the data output is of correct types.\r\n    Any value which type does not match desired outcome is not passed to finalData.\r\n    This hopefully would prevent database errors, like for example MongoDB\r\n    schema not matching the passed data.\r\n*/\r\n\r\nlet getValidatedForm = (obj: any) => {\r\n    let keys = Object.keys(obj);\r\n\r\n    let finalData: {[key: string]: string | number | boolean} = {};\r\n\r\n    for(let key of keys) {\r\n        if(key === 'title') {\r\n            typeof obj[key] === 'string' && (finalData[key] = obj[key]);\r\n            continue;\r\n        }\r\n        if(key === 'description') {\r\n            typeof obj[key] === 'string' && (finalData[key] = obj[key]);\r\n            continue;\r\n        }\r\n        if(key === 'category_id') {\r\n            typeof obj[key] === 'number' && (finalData[key] = obj[key]);\r\n            continue;\r\n        }\r\n        if(key === 'paid_event') {\r\n            typeof obj[key] === 'boolean' && (finalData[key] = obj[key]);\r\n            continue;\r\n        }\r\n        if(key === 'event_fee') {\r\n            typeof obj[key] === 'number' && (finalData[key] = obj[key]);\r\n            continue;\r\n        }\r\n        if(key === 'reward') {\r\n            typeof obj[key] === 'number' && (finalData[key] = obj[key]);\r\n            continue;\r\n        }\r\n        if(key === 'date') {\r\n            typeof obj[key] === 'string' && (finalData[key] = obj[key]);\r\n            continue;\r\n        }\r\n        if(key === 'duration') {\r\n            typeof obj[key] === 'number' && (finalData[key] = obj[key]);\r\n            continue;\r\n        }\r\n        if(key === 'coordinator') {\r\n            typeof obj[key] === 'object' && (finalData[key] = obj[key]);\r\n            continue;\r\n        }\r\n    }\r\n    return finalData;\r\n}\r\n\r\nexport default getValidatedForm;","import React from 'react';\r\nimport About from './About';\r\nimport Coordinator from './Coordinator';\r\nimport When from './When';\r\nimport ButtonSubmit from './inputs/ButtonSubmit';\r\nimport Success from './Success';\r\nimport getValidatedForm from '../data/getValidatedForm';\r\n\r\n\r\n// State type defined in accordance with task ReadME\r\ntype State = {\r\n    formSubmitted: boolean;\r\n    title: string;\r\n    description: string;\r\n    category_id?: number;\r\n    paid_event?: boolean;\r\n    event_fee?: number;\r\n    reward?: number;\r\n    date: string; // YYYY-MM-DDTHH:mm (example: 2018-01-19T15:15)\r\n    duration?: number; // in seconds\r\n    coordinator: {\r\n        email: string;\r\n        id: string;\r\n    };\r\n    loggedUserId?: number | null;\r\n}\r\n\r\ntype P = any;\r\n\r\nclass Main extends React.Component<P, State> {\r\n    readonly state = {\r\n        formSubmitted: false,\r\n        title: \"\",\r\n        description: \"\",\r\n        date: \"\",\r\n        coordinator: {\r\n            email: \"\",\r\n            id: \"\",\r\n        },\r\n        loggedUserId: null,\r\n    }\r\n\r\n    getLoggedUser = (): void => {\r\n        //This could be replaced by fetch() API call into setState()\r\n        this.setState({\r\n            loggedUserId: 3,\r\n        })\r\n    }\r\n\r\n    /* \r\n    Event listener that on invalid input:\r\n        - changes color of input border to pink\r\n        - changes label text to pink\r\n        - displays helpful tip next to culprit input\r\n        - gets removed when input is valid again \r\n    */\r\n    getInvalidFeedback = () => {\r\n        let invalidClass = 'invalid';\r\n        let invalidLabel = 'invalid-label';\r\n        let inputs = document.querySelectorAll('input, select, textarea');\r\n        inputs.forEach((input: any) => {\r\n            let label: any = document.querySelector(`[for='${input.id}']`);\r\n            let tooltip: any = document.querySelector(`[title='${input.id}']`);\r\n            input.addEventListener('invalid', () => {\r\n                input.classList.add(invalidClass);\r\n                label && label.classList.add(invalidLabel);\r\n                tooltip && (tooltip.className = 'shown');\r\n            })\r\n\r\n            input.addEventListener('input', () => {\r\n                if(input.validity.valid) {\r\n                    input.classList.remove(invalidClass);\r\n                    label && label.classList.remove(invalidLabel);\r\n                    tooltip && (tooltip.className = 'hidden');\r\n                }\r\n            })\r\n        });\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getLoggedUser();\r\n        this.getInvalidFeedback();\r\n    }\r\n\r\n    isEventPaid = (val: string): boolean => {\r\n        if (val === \"true\") {\r\n            return true;\r\n        } else {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    handleSubmit = (e: any) => {\r\n        e.preventDefault();\r\n        const {\r\n            title, description, category, paid_event,\r\n            event_fee, reward, date, time, duration,\r\n            coordinator, email\r\n        } = e.target;\r\n\r\n        const parsedFormData = {\r\n            title: title.value,\r\n            description: description.value,\r\n            category_id: category.value !== 'initial' ? parseInt(category.value) : undefined,\r\n            paid_event: this.isEventPaid(paid_event.value),\r\n            event_fee: event_fee && parseInt(event_fee.value),\r\n            reward: reward.value && parseInt(reward.value),\r\n            date: date.value + \"T\" + time.value,\r\n            duration: duration.value && duration.value * 60 * 60,\r\n            coordinator: {\r\n                email: email.value,\r\n                id: coordinator.value.toString(),\r\n            }\r\n        }\r\n        \r\n        // Form validation happens here\r\n        let finalData = getValidatedForm(parsedFormData);\r\n\r\n        this.setState({\r\n            formSubmitted: true,\r\n            ...finalData\r\n        }, () => console.log(JSON.stringify(finalData)));\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            // Replace from with Success screen if form was submitted\r\n            this.state.formSubmitted ? <Success /> :\r\n                <div className=\"main\">\r\n                    <div className=\"main-width-wrapper\">\r\n                        <form\r\n                            id=\"event-form\"\r\n                            onSubmit={this.handleSubmit}\r\n                        >\r\n                            <About />\r\n                            <Coordinator\r\n                                loggedUserId={this.state.loggedUserId}\r\n                            />\r\n                            <When />\r\n                            <ButtonSubmit text=\"Publish Event\" />\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Main;","import React from 'react';\nimport './App.css';\nimport Header from './components/Header';\nimport Main from './components/Main';\n\n\nconst App: React.FC = () => {\n  return (\n    <div className=\"App\">\n      <Header />\n      <Main />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}